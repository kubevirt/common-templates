sudo: required
dist: xenial
language: go

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - MINIKUBE_VER=v0.28.2
    - K8S_VER=1.11.2
    - KUBEVIRT_VER=v0.8.0-alpha.1

matrix:
  include:
  - name: Check syntax of all templates
    env: TARGET=syntax-tests
  - name: Functional test of the Fedora template
    env: TARGET=functional-tests TEST_FUNCTIONAL=fedora28
  - name: Functional test of the Ubuntu template
    env: TARGET=functional-tests TEST_FUNCTIONAL=ubuntu1804
  - name: Functional test of the OpenSUSE template
    env: TARGET=functional-tests TEST_FUNCTIONAL=opensuse15
  - name: Functional test of the CentOS/RHEL template
    env: TARGET=functional-tests TEST_FUNCTIONAL=rhel75

#notifications:
#  irc:
#    channels:
#      - "chat.freenode.net#kubevirt"
#    on_success: change
#    on_failure: always

addons:
  apt:
    packages:
    - qemu-utils
    - jq

before_script:
# Fetch binaries
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VER/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -L https://github.com/kubernetes-incubator/cri-tools/releases/download/v1.11.1/crictl-v1.11.1-linux-amd64.tar.gz | tar zx crictl && chmod +x crictl && sudo mv crictl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/$MINIKUBE_VER/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- curl -L https://github.com/openshift/origin/releases/download/v3.10.0/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz | tar zx --strip-components=1 openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit/oc && sudo mv oc /usr/local/bin
- curl -Lo virtctl https://github.com/kubevirt/kubevirt/releases/download/$KUBEVIRT_VER/virtctl-$KUBEVIRT_VER-linux-amd64 && chmod +x virtctl && sudo mv virtctl /usr/local/bin/

## FIXME Workaround for https://github.com/kubernetes/kubernetes/issues/61058
### And https://github.com/LiliC/travis-minikube/blob/e0f26f7b388057f51a0e2558afd5f990e07b6c49/.travis.yml#L11
- sudo mount --make-rshared /

# Start Kubernetes using minikube
- sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VER #--mount --mount-string /:/minikube-host
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

# Deploy KubeVirt
- kubectl create configmap -n kube-system kubevirt-config --from-literal debug.useEmulation=true || true
- kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/$KUBEVIRT_VER/kubevirt.yaml
- kubectl api-versions | grep kubevirt.io
- while [[ "$(kubectl get pods --all-namespaces --field-selector=status.phase!=Running | wc -l)" -gt 1 ]]; do kubectl get pods --all-namespaces ; sleep 6; done

- kubectl get pods --all-namespaces
- kubectl describe nodes
- kubectl describe -n kube-system daemonset virt-handler
- kubectl -n kube-system logs -l kubevirt.io=virt-handler

script:
# -e is important to let make use the vars defined in "matrix:" above
- make -e $TARGET
