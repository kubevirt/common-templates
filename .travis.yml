sudo: required
dist: xenial
language: go

branches:
  only:
  - master
  - /^v[0-9]/

env:
  global:
    - KUBEVIRT_VER=v0.8.0
#    - CPLATFORM=oc_cluster CDIST=origin CVER=3.10.0
    - CPLATFORM=minikube CDIST=kubernetes CVER=1.11.2


matrix:
  include:
  - name: Check syntax of all templates
    env: TARGET=syntax-tests
  - name: Functional test of the Fedora template
    env: TARGET=functional-tests TEST_FUNCTIONAL=fedora28
  - name: Functional test of the Ubuntu template
    env: TARGET=functional-tests TEST_FUNCTIONAL=ubuntu1804
  - name: Functional test of the OpenSUSE template
    env: TARGET=functional-tests TEST_FUNCTIONAL=opensuse15
  - name: Functional test of the CentOS/RHEL template
    env: TARGET=functional-tests TEST_FUNCTIONAL=rhel75

cache:
  directories:
  - cache
  - ~/.minishift/cache
  - ~/.minikube/cache

#notifications:
#  irc:
#    channels:
#      - "chat.freenode.net#kubevirt"
#    on_success: change
#    on_failure: always

addons:
  apt:
    packages:
    - qemu-utils
    - jq

before_script:
## FIXME Workaround for https://github.com/kubernetes/kubernetes/issues/61058
### And https://github.com/LiliC/travis-minikube/blob/e0f26f7b388057f51a0e2558afd5f990e07b6c49/.travis.yml#L11
- sudo mount --make-rshared /

# Fetch binaries
- bash -x ci/prepare-host $CPLATFORM $CVER
- bash -x ci/prepare-host virtctl $KUBEVIRT_VER
- bash -x ci/prepare-host oc 3.10.0

# Start Kubernetes using minikube
- bash -x ci/start-cluster $CPLATFORM $CVER

# Deploy KubeVirt
- bash -x ci/deploy-kubevirt $CDIST $KUBEVIRT_VER

- kubectl get pods --all-namespaces
- kubectl describe nodes
- kubectl describe -n kube-system daemonset virt-handler
- kubectl -n kube-system logs -l kubevirt.io=virt-handler

script:
- bash -x test.sh
